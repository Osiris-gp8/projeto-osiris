name: Esteira de desenvolvimento da Osiris
on:
  push:
    branches: main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Configurando versão do Java
        uses: actions/setup-java@v1
        with:
          java-version: '8'

      - name: Configurando versão do Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Build do back-end
        working-directory: osiris-api/
        run: |
          mvn clean install
          mvn package

      - name: Build do front-end
        working-directory: front-end-osiris/
        run: |
          npm install
          npm test --if-present

  deploy-dev:
    runs-on: ubuntu-latest
    environment:
      name: TI
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Build da imagem
        run: docker build --no-cache -f -t ${{ env.REGISTRY }}/kaio-baleeiro/react-app:latest .

      - name: Push da imagem
        run: docker push ${{ env.REGISTRY }}/kaio-baleeiro/react-app:latest

      - name: Entrega da aplicação em TI
        env:
          PRIVATE_KEY: ${{ secrets.CHAVE_SSH }}
          HOSTNAME: ${{ secrets.AWS_ADRESS }}
          USER: ${{ secrets.AWS_USER }}
          REGISTRY: ghcr.io
          USER_REPO: ${{ USER_REPOSITORY }}

        # run: |
        #   echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        #   ssh -O StrictHostKeyChecking=no  -i private_key ${USER_NAME}@${HOSTNAME} '
        #     cd /home/ubuntu/3CCO-2021-1-Grupo-08 &&
        #     git pull &&
        #     docker pull $REGISTRY/$USER_REPO/
        #     docker-compose up -d --build
        #   '
