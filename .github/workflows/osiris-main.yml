name: Esteira de desenvolvimento da Osiris
on:
  push:
    branches: 
      - main
      - develop
      - feature/esteira
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  USER_REPO: osiris-gp8

jobs:
  build-imagens:
    runs-on: ubuntu-latest
    if: contains(github.repository, 'Osiris-gp8') == true
    steps:
      
      - uses: actions/checkout@v2

      - name: Build imagem Back-end
        env:
          REGISTRY: ghcr.io
        run: docker build -f ./docker/springboot.dockerfile -t ${{ env.REGISTRY }}/${{ env.USER_REPO }}/backend:latest-ti .

      - name: Build imagem Front-end
        run: docker build -f ./docker/server.dockerfile -t ${{ env.REGISTRY }}/${{ env.USER_REPO }}/server:latest-ti .
        
      - name: Login no Github Packages
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push da imagem
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.USER_REPO }}/backend:latest-ti
          docker push ${{ env.REGISTRY }}/${{ env.USER_REPO }}/server:latest-ti

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-imagens
    environment:
      name: TI
      url: http://osiris-ti.ddns.net
    steps:

      - uses: actions/checkout@v2

      - name: Entrega da aplicação em TI
        env:
          PRIVATE_KEY: ${{ secrets.CHAVE_SSH }}
          HOSTNAME: ${{ secrets.AWS_ADRESS }}
          USER: ${{ secrets.AWS_USER }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          scp ./docker/docker-compose.yml -i private_key ${USER}@${HOSTNAME}:/home/ubuntu/docker-compose.yml
          ssh -i private_key ${USER}@${HOSTNAME} '
            docker-compose up -d --scale springboot=2
          '