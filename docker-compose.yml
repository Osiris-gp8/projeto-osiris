version: '3'

networks:
  osiris-network:
    driver: bridge

services:

  front-loadbalance:
    build:
      dockerfile: ./docker/frontend-nginx.dockerfile
      context: .
    image: osiris/front-loadbalance
    container_name: osiris-front-end-loadbalance
    ports:
      - "80:80"
      - "443:443"
    networks:
      - osiris-network
    depends_on:
      - react1
      - react2

  back-loadbalance:
    build:
      dockerfile: ./docker/backend-nginx.dockerfile
      context: .
    image: osiris/back-loadbalance
    container_name: osiris-back-end-loadbalance
    ports:
      - "85"
    networks:
      - osiris-network
    depends_on:
      - springboot1
      - springboot2

  react1:
    build:
      dockerfile: ./docker/react.dockerfile
      context: .
    image: osiris/front-end1
    container_name: osiris-front-end1
    ports:
      - "3000"
    networks:
      - osiris-network
    depends_on:
      - back-loadbalance

  springboot1:
    build:
      dockerfile: ./docker/springboot.dockerfile
      context: .
    image: osiris/springboot-api1
    container_name: osiris-api1
    ports:
      - "8081"
    networks:
      - osiris-network
  
  react2:
    build:
      dockerfile: ./docker/react.dockerfile
      context: .
    image: osiris/front-end2
    container_name: osiris-front-end2
    ports:
      - "3001"
    networks:
      - osiris-network
    depends_on:
      - back-loadbalance

  springboot2:
    build:
      dockerfile: ./docker/springboot.dockerfile
      context: .
    image: osiris/springboot-api2
    container_name: osiris-api2
    ports:
      - "8082"
    networks:
      - osiris-network